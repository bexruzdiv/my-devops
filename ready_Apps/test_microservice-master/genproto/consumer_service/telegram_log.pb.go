// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: telegram_log.proto

package consumer_service

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TelegramLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ChatId   string `protobuf:"bytes,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	NOfTries int32  `protobuf:"varint,4,opt,name=n_of_tries,json=nOfTries,proto3" json:"n_of_tries,omitempty"`
}

func (x *TelegramLog) Reset() {
	*x = TelegramLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telegram_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramLog) ProtoMessage() {}

func (x *TelegramLog) ProtoReflect() protoreflect.Message {
	mi := &file_telegram_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramLog.ProtoReflect.Descriptor instead.
func (*TelegramLog) Descriptor() ([]byte, []int) {
	return file_telegram_log_proto_rawDescGZIP(), []int{0}
}

func (x *TelegramLog) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TelegramLog) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TelegramLog) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *TelegramLog) GetNOfTries() int32 {
	if x != nil {
		return x.NOfTries
	}
	return 0
}

type TelegramLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message   string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ChatId    string `protobuf:"bytes,4,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	NOfTries  int32  `protobuf:"varint,5,opt,name=n_of_tries,json=nOfTries,proto3" json:"n_of_tries,omitempty"`
	CreatedAt string `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	SentAt    string `protobuf:"bytes,8,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
}

func (x *TelegramLogResponse) Reset() {
	*x = TelegramLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telegram_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramLogResponse) ProtoMessage() {}

func (x *TelegramLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_telegram_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramLogResponse.ProtoReflect.Descriptor instead.
func (*TelegramLogResponse) Descriptor() ([]byte, []int) {
	return file_telegram_log_proto_rawDescGZIP(), []int{1}
}

func (x *TelegramLogResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TelegramLogResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TelegramLogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TelegramLogResponse) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *TelegramLogResponse) GetNOfTries() int32 {
	if x != nil {
		return x.NOfTries
	}
	return 0
}

func (x *TelegramLogResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TelegramLogResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *TelegramLogResponse) GetSentAt() string {
	if x != nil {
		return x.SentAt
	}
	return ""
}

type TelegramLogUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	NOfTries int32  `protobuf:"varint,3,opt,name=n_of_tries,json=nOfTries,proto3" json:"n_of_tries,omitempty"`
}

func (x *TelegramLogUpdateRequest) Reset() {
	*x = TelegramLogUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telegram_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramLogUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramLogUpdateRequest) ProtoMessage() {}

func (x *TelegramLogUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_telegram_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramLogUpdateRequest.ProtoReflect.Descriptor instead.
func (*TelegramLogUpdateRequest) Descriptor() ([]byte, []int) {
	return file_telegram_log_proto_rawDescGZIP(), []int{2}
}

func (x *TelegramLogUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TelegramLogUpdateRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TelegramLogUpdateRequest) GetNOfTries() int32 {
	if x != nil {
		return x.NOfTries
	}
	return 0
}

type TelegramLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TelegramLogResponses []*TelegramLogResponse `protobuf:"bytes,1,rep,name=telegram_log_responses,json=telegramLogResponses,proto3" json:"telegram_log_responses,omitempty"`
	Count                int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TelegramLogsResponse) Reset() {
	*x = TelegramLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telegram_log_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramLogsResponse) ProtoMessage() {}

func (x *TelegramLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_telegram_log_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramLogsResponse.ProtoReflect.Descriptor instead.
func (*TelegramLogsResponse) Descriptor() ([]byte, []int) {
	return file_telegram_log_proto_rawDescGZIP(), []int{3}
}

func (x *TelegramLogsResponse) GetTelegramLogResponses() []*TelegramLogResponse {
	if x != nil {
		return x.TelegramLogResponses
	}
	return nil
}

func (x *TelegramLogsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TelegramLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status      string       `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	FindRequest *FindRequest `protobuf:"bytes,3,opt,name=find_request,json=findRequest,proto3" json:"find_request,omitempty"`
}

func (x *TelegramLogRequest) Reset() {
	*x = TelegramLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_telegram_log_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramLogRequest) ProtoMessage() {}

func (x *TelegramLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_telegram_log_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramLogRequest.ProtoReflect.Descriptor instead.
func (*TelegramLogRequest) Descriptor() ([]byte, []int) {
	return file_telegram_log_proto_rawDescGZIP(), []int{4}
}

func (x *TelegramLogRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TelegramLogRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TelegramLogRequest) GetFindRequest() *FindRequest {
	if x != nil {
		return x.FindRequest
	}
	return nil
}

var File_telegram_log_proto protoreflect.FileDescriptor

var file_telegram_log_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76, 0x0a, 0x0b, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x0a, 0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6e, 0x4f, 0x66, 0x54, 0x72, 0x69, 0x65, 0x73, 0x22, 0xe5, 0x01, 0x0a,
	0x13, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x0a, 0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x4f, 0x66, 0x54, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x74, 0x41, 0x74, 0x22, 0x60, 0x0a, 0x18, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x6e, 0x5f, 0x6f, 0x66,
	0x5f, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x4f,
	0x66, 0x54, 0x72, 0x69, 0x65, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x16, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x14, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x12, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x40, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x1b, 0x5a, 0x19, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_telegram_log_proto_rawDescOnce sync.Once
	file_telegram_log_proto_rawDescData = file_telegram_log_proto_rawDesc
)

func file_telegram_log_proto_rawDescGZIP() []byte {
	file_telegram_log_proto_rawDescOnce.Do(func() {
		file_telegram_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_telegram_log_proto_rawDescData)
	})
	return file_telegram_log_proto_rawDescData
}

var file_telegram_log_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_telegram_log_proto_goTypes = []interface{}{
	(*TelegramLog)(nil),              // 0: consumer_service.TelegramLog
	(*TelegramLogResponse)(nil),      // 1: consumer_service.TelegramLogResponse
	(*TelegramLogUpdateRequest)(nil), // 2: consumer_service.TelegramLogUpdateRequest
	(*TelegramLogsResponse)(nil),     // 3: consumer_service.TelegramLogsResponse
	(*TelegramLogRequest)(nil),       // 4: consumer_service.TelegramLogRequest
	(*FindRequest)(nil),              // 5: consumer_service.FindRequest
}
var file_telegram_log_proto_depIdxs = []int32{
	1, // 0: consumer_service.TelegramLogsResponse.telegram_log_responses:type_name -> consumer_service.TelegramLogResponse
	5, // 1: consumer_service.TelegramLogRequest.find_request:type_name -> consumer_service.FindRequest
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_telegram_log_proto_init() }
func file_telegram_log_proto_init() {
	if File_telegram_log_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_telegram_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telegram_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telegram_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramLogUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telegram_log_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_telegram_log_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_telegram_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_telegram_log_proto_goTypes,
		DependencyIndexes: file_telegram_log_proto_depIdxs,
		MessageInfos:      file_telegram_log_proto_msgTypes,
	}.Build()
	File_telegram_log_proto = out.File
	file_telegram_log_proto_rawDesc = nil
	file_telegram_log_proto_goTypes = nil
	file_telegram_log_proto_depIdxs = nil
}
