// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: user_reviews.proto

package content_service

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetAllReviewsReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId  string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	BranchId   string `protobuf:"bytes,2,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	StartDate  string `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate    string `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	CourierId  string `protobuf:"bytes,5,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	ClientId   string `protobuf:"bytes,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	OperatorId string `protobuf:"bytes,7,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
}

func (x *GetAllReviewsReportRequest) Reset() {
	*x = GetAllReviewsReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReviewsReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReviewsReportRequest) ProtoMessage() {}

func (x *GetAllReviewsReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReviewsReportRequest.ProtoReflect.Descriptor instead.
func (*GetAllReviewsReportRequest) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllReviewsReportRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetAllReviewsReportRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetAllReviewsReportRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetAllReviewsReportRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetAllReviewsReportRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

func (x *GetAllReviewsReportRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetAllReviewsReportRequest) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

type GetAllReviewsReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reports []*RelatedSubject `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
}

func (x *GetAllReviewsReportResponse) Reset() {
	*x = GetAllReviewsReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReviewsReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReviewsReportResponse) ProtoMessage() {}

func (x *GetAllReviewsReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReviewsReportResponse.ProtoReflect.Descriptor instead.
func (*GetAllReviewsReportResponse) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllReviewsReportResponse) GetReports() []*RelatedSubject {
	if x != nil {
		return x.Reports
	}
	return nil
}

type GetCustomReviewsReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId  string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	StartDate  string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate    string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	BranchId   string `protobuf:"bytes,4,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	CourierId  string `protobuf:"bytes,5,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	ClientId   string `protobuf:"bytes,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	OperatorId string `protobuf:"bytes,7,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	Page       int64  `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`
	Limit      int64  `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetCustomReviewsReportRequest) Reset() {
	*x = GetCustomReviewsReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomReviewsReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomReviewsReportRequest) ProtoMessage() {}

func (x *GetCustomReviewsReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomReviewsReportRequest.ProtoReflect.Descriptor instead.
func (*GetCustomReviewsReportRequest) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{2}
}

func (x *GetCustomReviewsReportRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetCustomReviewsReportRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetCustomReviewsReportRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetCustomReviewsReportRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetCustomReviewsReportRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

func (x *GetCustomReviewsReportRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetCustomReviewsReportRequest) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *GetCustomReviewsReportRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCustomReviewsReportRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetCustomReviewsReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeReports []*GetCustomReviewsReportResponse_CustomReviewTypeReport `protobuf:"bytes,1,rep,name=type_reports,json=typeReports,proto3" json:"type_reports,omitempty"`
}

func (x *GetCustomReviewsReportResponse) Reset() {
	*x = GetCustomReviewsReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomReviewsReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomReviewsReportResponse) ProtoMessage() {}

func (x *GetCustomReviewsReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomReviewsReportResponse.ProtoReflect.Descriptor instead.
func (*GetCustomReviewsReportResponse) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{3}
}

func (x *GetCustomReviewsReportResponse) GetTypeReports() []*GetCustomReviewsReportResponse_CustomReviewTypeReport {
	if x != nil {
		return x.TypeReports
	}
	return nil
}

type UserReviews struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Lang           string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Type           string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	ShipperId      string `protobuf:"bytes,4,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	ReviewId       string `protobuf:"bytes,6,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	OrderNum       int64  `protobuf:"varint,7,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	DeliveryTime   string `protobuf:"bytes,8,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`
	CourierName    string `protobuf:"bytes,9,opt,name=courier_name,json=courierName,proto3" json:"courier_name,omitempty"`
	CourierId      string `protobuf:"bytes,10,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	OperatorName   string `protobuf:"bytes,11,opt,name=operator_name,json=operatorName,proto3" json:"operator_name,omitempty"`
	OperatorId     string `protobuf:"bytes,12,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	ClientName     string `protobuf:"bytes,13,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	ClientPhone    string `protobuf:"bytes,14,opt,name=client_phone,json=clientPhone,proto3" json:"client_phone,omitempty"`
	ClientId       string `protobuf:"bytes,15,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	BranchId       string `protobuf:"bytes,16,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ReviewMessage  string `protobuf:"bytes,17,opt,name=review_message,json=reviewMessage,proto3" json:"review_message,omitempty"`
	CreatedAt      string `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	BranchName     string `protobuf:"bytes,19,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	RelatedSubject string `protobuf:"bytes,20,opt,name=related_subject,json=relatedSubject,proto3" json:"related_subject,omitempty"`
}

func (x *UserReviews) Reset() {
	*x = UserReviews{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReviews) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReviews) ProtoMessage() {}

func (x *UserReviews) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReviews.ProtoReflect.Descriptor instead.
func (*UserReviews) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{4}
}

func (x *UserReviews) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserReviews) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UserReviews) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserReviews) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *UserReviews) GetReviewId() string {
	if x != nil {
		return x.ReviewId
	}
	return ""
}

func (x *UserReviews) GetOrderNum() int64 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *UserReviews) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

func (x *UserReviews) GetCourierName() string {
	if x != nil {
		return x.CourierName
	}
	return ""
}

func (x *UserReviews) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

func (x *UserReviews) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *UserReviews) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *UserReviews) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *UserReviews) GetClientPhone() string {
	if x != nil {
		return x.ClientPhone
	}
	return ""
}

func (x *UserReviews) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserReviews) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *UserReviews) GetReviewMessage() string {
	if x != nil {
		return x.ReviewMessage
	}
	return ""
}

func (x *UserReviews) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UserReviews) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *UserReviews) GetRelatedSubject() string {
	if x != nil {
		return x.RelatedSubject
	}
	return ""
}

type GetBranchesReviewsReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetBranchesReviewsReportRequest) Reset() {
	*x = GetBranchesReviewsReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchesReviewsReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchesReviewsReportRequest) ProtoMessage() {}

func (x *GetBranchesReviewsReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchesReviewsReportRequest.ProtoReflect.Descriptor instead.
func (*GetBranchesReviewsReportRequest) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{5}
}

func (x *GetBranchesReviewsReportRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetBranchesReviewsReportRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetBranchesReviewsReportRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type GetBranchesReviewsReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchReports        []*BranchReport   `protobuf:"bytes,1,rep,name=branch_reports,json=branchReports,proto3" json:"branch_reports,omitempty"`
	Count                int64             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	RelatedSubjectReport []*RelatedSubject `protobuf:"bytes,3,rep,name=related_subject_report,json=relatedSubjectReport,proto3" json:"related_subject_report,omitempty"`
}

func (x *GetBranchesReviewsReportResponse) Reset() {
	*x = GetBranchesReviewsReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchesReviewsReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchesReviewsReportResponse) ProtoMessage() {}

func (x *GetBranchesReviewsReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchesReviewsReportResponse.ProtoReflect.Descriptor instead.
func (*GetBranchesReviewsReportResponse) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{6}
}

func (x *GetBranchesReviewsReportResponse) GetBranchReports() []*BranchReport {
	if x != nil {
		return x.BranchReports
	}
	return nil
}

func (x *GetBranchesReviewsReportResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetBranchesReviewsReportResponse) GetRelatedSubjectReport() []*RelatedSubject {
	if x != nil {
		return x.RelatedSubjectReport
	}
	return nil
}

type BranchReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RelatedSubjects []*RelatedSubject `protobuf:"bytes,3,rep,name=related_subjects,json=relatedSubjects,proto3" json:"related_subjects,omitempty"`
}

func (x *BranchReport) Reset() {
	*x = BranchReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BranchReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BranchReport) ProtoMessage() {}

func (x *BranchReport) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BranchReport.ProtoReflect.Descriptor instead.
func (*BranchReport) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{7}
}

func (x *BranchReport) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BranchReport) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BranchReport) GetRelatedSubjects() []*RelatedSubject {
	if x != nil {
		return x.RelatedSubjects
	}
	return nil
}

type RelatedSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectName string        `protobuf:"bytes,1,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	TypeReports []*TypeReport `protobuf:"bytes,2,rep,name=type_reports,json=typeReports,proto3" json:"type_reports,omitempty"`
}

func (x *RelatedSubject) Reset() {
	*x = RelatedSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedSubject) ProtoMessage() {}

func (x *RelatedSubject) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedSubject.ProtoReflect.Descriptor instead.
func (*RelatedSubject) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{8}
}

func (x *RelatedSubject) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *RelatedSubject) GetTypeReports() []*TypeReport {
	if x != nil {
		return x.TypeReports
	}
	return nil
}

type TypeReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Count   int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Percent int64  `protobuf:"varint,3,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *TypeReport) Reset() {
	*x = TypeReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeReport) ProtoMessage() {}

func (x *TypeReport) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeReport.ProtoReflect.Descriptor instead.
func (*TypeReport) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{9}
}

func (x *TypeReport) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TypeReport) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TypeReport) GetPercent() int64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type GetOperatorReviewsReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipperId string `protobuf:"bytes,1,opt,name=shipper_id,json=shipperId,proto3" json:"shipper_id,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetOperatorReviewsReportRequest) Reset() {
	*x = GetOperatorReviewsReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperatorReviewsReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorReviewsReportRequest) ProtoMessage() {}

func (x *GetOperatorReviewsReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorReviewsReportRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorReviewsReportRequest) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{10}
}

func (x *GetOperatorReviewsReportRequest) GetShipperId() string {
	if x != nil {
		return x.ShipperId
	}
	return ""
}

func (x *GetOperatorReviewsReportRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetOperatorReviewsReportRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type GetOperatorReviewsReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorReports      []*OperatorReport `protobuf:"bytes,1,rep,name=operator_reports,json=operatorReports,proto3" json:"operator_reports,omitempty"`
	Count                int64             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	RelatedSubjectReport []*RelatedSubject `protobuf:"bytes,3,rep,name=related_subject_report,json=relatedSubjectReport,proto3" json:"related_subject_report,omitempty"`
}

func (x *GetOperatorReviewsReportResponse) Reset() {
	*x = GetOperatorReviewsReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperatorReviewsReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorReviewsReportResponse) ProtoMessage() {}

func (x *GetOperatorReviewsReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorReviewsReportResponse.ProtoReflect.Descriptor instead.
func (*GetOperatorReviewsReportResponse) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{11}
}

func (x *GetOperatorReviewsReportResponse) GetOperatorReports() []*OperatorReport {
	if x != nil {
		return x.OperatorReports
	}
	return nil
}

func (x *GetOperatorReviewsReportResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetOperatorReviewsReportResponse) GetRelatedSubjectReport() []*RelatedSubject {
	if x != nil {
		return x.RelatedSubjectReport
	}
	return nil
}

type OperatorReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RelatedSubjects []*RelatedSubject `protobuf:"bytes,3,rep,name=related_subjects,json=relatedSubjects,proto3" json:"related_subjects,omitempty"`
}

func (x *OperatorReport) Reset() {
	*x = OperatorReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorReport) ProtoMessage() {}

func (x *OperatorReport) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorReport.ProtoReflect.Descriptor instead.
func (*OperatorReport) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{12}
}

func (x *OperatorReport) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OperatorReport) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OperatorReport) GetRelatedSubjects() []*RelatedSubject {
	if x != nil {
		return x.RelatedSubjects
	}
	return nil
}

type UserReviewsId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserReviewsId) Reset() {
	*x = UserReviewsId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReviewsId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReviewsId) ProtoMessage() {}

func (x *UserReviewsId) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReviewsId.ProtoReflect.Descriptor instead.
func (*UserReviewsId) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{13}
}

func (x *UserReviewsId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCustomReviewsReportResponse_CustomReviewTypeReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewType  string         `protobuf:"bytes,1,opt,name=review_type,json=reviewType,proto3" json:"review_type,omitempty"`
	Count       int64          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Percent     int64          `protobuf:"varint,3,opt,name=percent,proto3" json:"percent,omitempty"`
	UserReviews []*UserReviews `protobuf:"bytes,4,rep,name=user_reviews,json=userReviews,proto3" json:"user_reviews,omitempty"`
}

func (x *GetCustomReviewsReportResponse_CustomReviewTypeReport) Reset() {
	*x = GetCustomReviewsReportResponse_CustomReviewTypeReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_reviews_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomReviewsReportResponse_CustomReviewTypeReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomReviewsReportResponse_CustomReviewTypeReport) ProtoMessage() {}

func (x *GetCustomReviewsReportResponse_CustomReviewTypeReport) ProtoReflect() protoreflect.Message {
	mi := &file_user_reviews_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomReviewsReportResponse_CustomReviewTypeReport.ProtoReflect.Descriptor instead.
func (*GetCustomReviewsReportResponse_CustomReviewTypeReport) Descriptor() ([]byte, []int) {
	return file_user_reviews_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetCustomReviewsReportResponse_CustomReviewTypeReport) GetReviewType() string {
	if x != nil {
		return x.ReviewType
	}
	return ""
}

func (x *GetCustomReviewsReportResponse_CustomReviewTypeReport) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetCustomReviewsReportResponse_CustomReviewTypeReport) GetPercent() int64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *GetCustomReviewsReportResponse_CustomReviewTypeReport) GetUserReviews() []*UserReviews {
	if x != nil {
		return x.UserReviews
	}
	return nil
}

var File_user_reviews_proto protoreflect.FileDescriptor

var file_user_reviews_proto_rawDesc = []byte{
	0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x51,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x22, 0x9c, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0xaa, 0x02, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0xa3, 0x01, 0x0a, 0x16, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x22, 0xd9, 0x04,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x7a, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0d, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x4e, 0x0a, 0x16, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x14, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x77, 0x0a, 0x0c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x6c, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a,
	0x0c, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x7a, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x16, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x14,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x79, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22,
	0x1f, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x32, 0x8f, 0x04, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x1a, 0x17, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x49,
	0x64, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x73, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65,
	0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x29,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x29, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x24, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_reviews_proto_rawDescOnce sync.Once
	file_user_reviews_proto_rawDescData = file_user_reviews_proto_rawDesc
)

func file_user_reviews_proto_rawDescGZIP() []byte {
	file_user_reviews_proto_rawDescOnce.Do(func() {
		file_user_reviews_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_reviews_proto_rawDescData)
	})
	return file_user_reviews_proto_rawDescData
}

var file_user_reviews_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_user_reviews_proto_goTypes = []interface{}{
	(*GetAllReviewsReportRequest)(nil),                            // 0: genproto.GetAllReviewsReportRequest
	(*GetAllReviewsReportResponse)(nil),                           // 1: genproto.GetAllReviewsReportResponse
	(*GetCustomReviewsReportRequest)(nil),                         // 2: genproto.GetCustomReviewsReportRequest
	(*GetCustomReviewsReportResponse)(nil),                        // 3: genproto.GetCustomReviewsReportResponse
	(*UserReviews)(nil),                                           // 4: genproto.UserReviews
	(*GetBranchesReviewsReportRequest)(nil),                       // 5: genproto.GetBranchesReviewsReportRequest
	(*GetBranchesReviewsReportResponse)(nil),                      // 6: genproto.GetBranchesReviewsReportResponse
	(*BranchReport)(nil),                                          // 7: genproto.BranchReport
	(*RelatedSubject)(nil),                                        // 8: genproto.RelatedSubject
	(*TypeReport)(nil),                                            // 9: genproto.TypeReport
	(*GetOperatorReviewsReportRequest)(nil),                       // 10: genproto.GetOperatorReviewsReportRequest
	(*GetOperatorReviewsReportResponse)(nil),                      // 11: genproto.GetOperatorReviewsReportResponse
	(*OperatorReport)(nil),                                        // 12: genproto.OperatorReport
	(*UserReviewsId)(nil),                                         // 13: genproto.UserReviewsId
	(*GetCustomReviewsReportResponse_CustomReviewTypeReport)(nil), // 14: genproto.GetCustomReviewsReportResponse.CustomReviewTypeReport
}
var file_user_reviews_proto_depIdxs = []int32{
	8,  // 0: genproto.GetAllReviewsReportResponse.reports:type_name -> genproto.RelatedSubject
	14, // 1: genproto.GetCustomReviewsReportResponse.type_reports:type_name -> genproto.GetCustomReviewsReportResponse.CustomReviewTypeReport
	7,  // 2: genproto.GetBranchesReviewsReportResponse.branch_reports:type_name -> genproto.BranchReport
	8,  // 3: genproto.GetBranchesReviewsReportResponse.related_subject_report:type_name -> genproto.RelatedSubject
	8,  // 4: genproto.BranchReport.related_subjects:type_name -> genproto.RelatedSubject
	9,  // 5: genproto.RelatedSubject.type_reports:type_name -> genproto.TypeReport
	12, // 6: genproto.GetOperatorReviewsReportResponse.operator_reports:type_name -> genproto.OperatorReport
	8,  // 7: genproto.GetOperatorReviewsReportResponse.related_subject_report:type_name -> genproto.RelatedSubject
	8,  // 8: genproto.OperatorReport.related_subjects:type_name -> genproto.RelatedSubject
	4,  // 9: genproto.GetCustomReviewsReportResponse.CustomReviewTypeReport.user_reviews:type_name -> genproto.UserReviews
	4,  // 10: genproto.UserReviewsService.Create:input_type -> genproto.UserReviews
	2,  // 11: genproto.UserReviewsService.GetCustomReviewsReport:input_type -> genproto.GetCustomReviewsReportRequest
	5,  // 12: genproto.UserReviewsService.GetBranchesReviewsReport:input_type -> genproto.GetBranchesReviewsReportRequest
	10, // 13: genproto.UserReviewsService.GetOperatorReviewsReport:input_type -> genproto.GetOperatorReviewsReportRequest
	0,  // 14: genproto.UserReviewsService.GetAllReviewsReport:input_type -> genproto.GetAllReviewsReportRequest
	13, // 15: genproto.UserReviewsService.Create:output_type -> genproto.UserReviewsId
	3,  // 16: genproto.UserReviewsService.GetCustomReviewsReport:output_type -> genproto.GetCustomReviewsReportResponse
	6,  // 17: genproto.UserReviewsService.GetBranchesReviewsReport:output_type -> genproto.GetBranchesReviewsReportResponse
	11, // 18: genproto.UserReviewsService.GetOperatorReviewsReport:output_type -> genproto.GetOperatorReviewsReportResponse
	1,  // 19: genproto.UserReviewsService.GetAllReviewsReport:output_type -> genproto.GetAllReviewsReportResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_user_reviews_proto_init() }
func file_user_reviews_proto_init() {
	if File_user_reviews_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_reviews_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReviewsReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReviewsReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomReviewsReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomReviewsReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReviews); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchesReviewsReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchesReviewsReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BranchReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperatorReviewsReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperatorReviewsReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReviewsId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_reviews_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomReviewsReportResponse_CustomReviewTypeReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_reviews_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_reviews_proto_goTypes,
		DependencyIndexes: file_user_reviews_proto_depIdxs,
		MessageInfos:      file_user_reviews_proto_msgTypes,
	}.Build()
	File_user_reviews_proto = out.File
	file_user_reviews_proto_rawDesc = nil
	file_user_reviews_proto_goTypes = nil
	file_user_reviews_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserReviewsServiceClient is the client API for UserReviewsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserReviewsServiceClient interface {
	Create(ctx context.Context, in *UserReviews, opts ...grpc.CallOption) (*UserReviewsId, error)
	GetCustomReviewsReport(ctx context.Context, in *GetCustomReviewsReportRequest, opts ...grpc.CallOption) (*GetCustomReviewsReportResponse, error)
	GetBranchesReviewsReport(ctx context.Context, in *GetBranchesReviewsReportRequest, opts ...grpc.CallOption) (*GetBranchesReviewsReportResponse, error)
	GetOperatorReviewsReport(ctx context.Context, in *GetOperatorReviewsReportRequest, opts ...grpc.CallOption) (*GetOperatorReviewsReportResponse, error)
	GetAllReviewsReport(ctx context.Context, in *GetAllReviewsReportRequest, opts ...grpc.CallOption) (*GetAllReviewsReportResponse, error)
}

type userReviewsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserReviewsServiceClient(cc grpc.ClientConnInterface) UserReviewsServiceClient {
	return &userReviewsServiceClient{cc}
}

func (c *userReviewsServiceClient) Create(ctx context.Context, in *UserReviews, opts ...grpc.CallOption) (*UserReviewsId, error) {
	out := new(UserReviewsId)
	err := c.cc.Invoke(ctx, "/genproto.UserReviewsService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userReviewsServiceClient) GetCustomReviewsReport(ctx context.Context, in *GetCustomReviewsReportRequest, opts ...grpc.CallOption) (*GetCustomReviewsReportResponse, error) {
	out := new(GetCustomReviewsReportResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserReviewsService/GetCustomReviewsReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userReviewsServiceClient) GetBranchesReviewsReport(ctx context.Context, in *GetBranchesReviewsReportRequest, opts ...grpc.CallOption) (*GetBranchesReviewsReportResponse, error) {
	out := new(GetBranchesReviewsReportResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserReviewsService/GetBranchesReviewsReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userReviewsServiceClient) GetOperatorReviewsReport(ctx context.Context, in *GetOperatorReviewsReportRequest, opts ...grpc.CallOption) (*GetOperatorReviewsReportResponse, error) {
	out := new(GetOperatorReviewsReportResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserReviewsService/GetOperatorReviewsReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userReviewsServiceClient) GetAllReviewsReport(ctx context.Context, in *GetAllReviewsReportRequest, opts ...grpc.CallOption) (*GetAllReviewsReportResponse, error) {
	out := new(GetAllReviewsReportResponse)
	err := c.cc.Invoke(ctx, "/genproto.UserReviewsService/GetAllReviewsReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserReviewsServiceServer is the server API for UserReviewsService service.
type UserReviewsServiceServer interface {
	Create(context.Context, *UserReviews) (*UserReviewsId, error)
	GetCustomReviewsReport(context.Context, *GetCustomReviewsReportRequest) (*GetCustomReviewsReportResponse, error)
	GetBranchesReviewsReport(context.Context, *GetBranchesReviewsReportRequest) (*GetBranchesReviewsReportResponse, error)
	GetOperatorReviewsReport(context.Context, *GetOperatorReviewsReportRequest) (*GetOperatorReviewsReportResponse, error)
	GetAllReviewsReport(context.Context, *GetAllReviewsReportRequest) (*GetAllReviewsReportResponse, error)
}

// UnimplementedUserReviewsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserReviewsServiceServer struct {
}

func (*UnimplementedUserReviewsServiceServer) Create(context.Context, *UserReviews) (*UserReviewsId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserReviewsServiceServer) GetCustomReviewsReport(context.Context, *GetCustomReviewsReportRequest) (*GetCustomReviewsReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomReviewsReport not implemented")
}
func (*UnimplementedUserReviewsServiceServer) GetBranchesReviewsReport(context.Context, *GetBranchesReviewsReportRequest) (*GetBranchesReviewsReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBranchesReviewsReport not implemented")
}
func (*UnimplementedUserReviewsServiceServer) GetOperatorReviewsReport(context.Context, *GetOperatorReviewsReportRequest) (*GetOperatorReviewsReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOperatorReviewsReport not implemented")
}
func (*UnimplementedUserReviewsServiceServer) GetAllReviewsReport(context.Context, *GetAllReviewsReportRequest) (*GetAllReviewsReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllReviewsReport not implemented")
}

func RegisterUserReviewsServiceServer(s *grpc.Server, srv UserReviewsServiceServer) {
	s.RegisterService(&_UserReviewsService_serviceDesc, srv)
}

func _UserReviewsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReviews)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserReviewsServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserReviewsService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserReviewsServiceServer).Create(ctx, req.(*UserReviews))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserReviewsService_GetCustomReviewsReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomReviewsReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserReviewsServiceServer).GetCustomReviewsReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserReviewsService/GetCustomReviewsReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserReviewsServiceServer).GetCustomReviewsReport(ctx, req.(*GetCustomReviewsReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserReviewsService_GetBranchesReviewsReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBranchesReviewsReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserReviewsServiceServer).GetBranchesReviewsReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserReviewsService/GetBranchesReviewsReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserReviewsServiceServer).GetBranchesReviewsReport(ctx, req.(*GetBranchesReviewsReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserReviewsService_GetOperatorReviewsReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOperatorReviewsReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserReviewsServiceServer).GetOperatorReviewsReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserReviewsService/GetOperatorReviewsReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserReviewsServiceServer).GetOperatorReviewsReport(ctx, req.(*GetOperatorReviewsReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserReviewsService_GetAllReviewsReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllReviewsReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserReviewsServiceServer).GetAllReviewsReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.UserReviewsService/GetAllReviewsReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserReviewsServiceServer).GetAllReviewsReport(ctx, req.(*GetAllReviewsReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserReviewsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.UserReviewsService",
	HandlerType: (*UserReviewsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _UserReviewsService_Create_Handler,
		},
		{
			MethodName: "GetCustomReviewsReport",
			Handler:    _UserReviewsService_GetCustomReviewsReport_Handler,
		},
		{
			MethodName: "GetBranchesReviewsReport",
			Handler:    _UserReviewsService_GetBranchesReviewsReport_Handler,
		},
		{
			MethodName: "GetOperatorReviewsReport",
			Handler:    _UserReviewsService_GetOperatorReviewsReport_Handler,
		},
		{
			MethodName: "GetAllReviewsReport",
			Handler:    _UserReviewsService_GetAllReviewsReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_reviews.proto",
}
