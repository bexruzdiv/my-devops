
---
- name: Install required packages
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - software-properties-common
    - wget


- name: Add HashiCorp GPG key
  shell: |
    wget -qO - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
  become: true
  
- name: Add HashiCorp APT repository
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_lsb.codename }} main"
    state: present

- name: Update apt packages
  apt:
    update_cache: yes

- name: Install Vault
  apt:
    name: vault
    state: present

- name: Create Vault configuration file
  template:
    src: "{{ 'vault.hcl_1' if inventory_hostname == 'leader' else ('vault.hcl_2' if inventory_hostname == 'follower1' else 'vault.hcl_3') }}"
    dest: /etc/vault.d/vault.hcl
  when: inventory_hostname in ['leader', 'follower1', 'follower2']


- name: Ensure Vault service is started and enabled
  become: true
  service:
    name: vault
    state: started
    enabled: true





# - name: Run vault operator init
#   command: vault operator init -address=https://{{ domain_1 }}:8200
#   register: vault_init_output
#   when: inventory_hostname == 'leader'

# - set_fact:
#     unseal_key_1: "{{ vault_init_output.stdout_lines[0].split(': ')[1] }}"
#     unseal_key_2: "{{ vault_init_output.stdout_lines[1].split(': ')[1] }}"
#     unseal_key_3: "{{ vault_init_output.stdout_lines[2].split(': ')[1] }}"
#     unseal_key_4: "{{ vault_init_output.stdout_lines[3].split(': ')[1] }}"
#     unseal_key_5: "{{ vault_init_output.stdout_lines[4].split(': ')[1] }}"
#     root_token: "{{ vault_init_output.stdout_lines[6].split(': ')[1] }}"
#   when: inventory_hostname == 'leader'
  

# - name: Create /root/key file with unseal keys and root token
#   ansible.builtin.copy:
#     content: |
#       Unseal Key 1: {{ unseal_key_1 }}
#       Unseal Key 2: {{ unseal_key_2 }}
#       Unseal Key 3: {{ unseal_key_3 }}
#       Unseal Key 4: {{ unseal_key_4 }}
#       Unseal Key 5: {{ unseal_key_5 }}
#       Root Token: {{ root_token }}
#     dest: /root/key
#   when: inventory_hostname == 'leader'

# - name: Run vault operator join raft
#   command: vault operator raft join "https://{{ domain_1 }}:8200" -address=https://{{ domain_1 }}:8200
#   when: inventory_hostname == 'follower1'

# - name: Run vault operator join raft
#   command: vault operator raft join "https://{{ domain_1 }}:8200" -address=https://{{ domain_1 }}:8200
#   when: inventory_hostname == 'follower2'

# - name: Unseal Vault
#   ansible.builtin.shell:
#     cmd: vault operator unseal -address="https://{{ domain_1 }}:8200" "{{ item }}"
#   loop:
#     - "{{ unseal_key_1 }}"
#     - "{{ unseal_key_2 }}"
#     - "{{ unseal_key_3 }}"
#   loop_control:
#     loop_var: item

# #follower 1
# - name: Run vault operator join raft to self
#   command: vault operator raft join "https://{{ domain_1 }}:8200" -address=https://{{ domain_2 }}:8200
#   when: inventory_hostname == 'follower1'

# - name: Unseal Vault
#   ansible.builtin.shell:
#     cmd: vault operator unseal -address="https://{{ domain_2 }}:8200" "{{ item }}"
#   loop:
#     - "{{ unseal_key_1 }}"
#     - "{{ unseal_key_2 }}"
#     - "{{ unseal_key_3 }}"
#   loop_control:
#     loop_var: item
#   when: inventory_hostname == 'follower1'


# #follower 2
# - name: Run vault operator join raft to self
#   command: vault operator raft join "https://{{ domain_1 }}:8200" -address=https://{{ domain_3 }}:8200
#   when: inventory_hostname == 'follower2'

# - name: Unseal Vault
#   ansible.builtin.shell:
#     cmd: vault operator unseal -address="https://{{ domain_3 }}:8200" "{{ item }}"
#   loop:
#     - "{{ unseal_key_1 }}"
#     - "{{ unseal_key_2 }}"
#     - "{{ unseal_key_3 }}"
#   loop_control:
#     loop_var: item
#   when: inventory_hostname == 'follower2'


